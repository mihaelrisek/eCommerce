<a class="history_back" onclick="history.back()">Vrati se</a>
<% if (product != null) { %>
<section class="section_product" >


    <article class="article_img">
      <article class="img_container">
        <% product.images.forEach((img) => {%>
          <div class="img_wrapper">
            <img src="<%= img%>" alt="<%= product.name%>">
          </div>
        <% } );%>
      </article>
    </article>
  
    
    <article class="article_txt">
      <h1><%= product.name%></h1>
      <h3><%= product.description %></h3>
      <h3>
        <strong>€ <%= (product.price - (product.price * (product.discount.active ? product.discount.percentage / 100 : 0))).toFixed(2) %></strong>
       
        <% if (product.discount.active) {%>
          <span style="text-decoration: line-through;">€ <%= product.price %></span>
          <span><%= product.discount.percentage %>% off</span>
          <span> 
            <% 
              let endDate = new Date(product.discount.end_date);
              let currentDate = new Date();
              let timeDifference = endDate.getTime() - currentDate.getTime();
              let daysDifference = Math.ceil(timeDifference / (1000 * 3600 * 24));
              if (daysDifference > 0) {
            %>
            <%= "Požurite jer popust vrijedi još "+  daysDifference %>  dan<%= daysDifference !== 1 ? 'a' : '' %> 
            <% } %>
          </span>
        <% } %>
      </h3>

      <div class="details_wrapper">
      <h3>Details</h3>

        <% const displayDetails = (details) => { %>
          <% if (details && typeof details === 'object') { %>
            <% Object.entries(details).forEach(([key, value]) => { %>
              <div style="margin-left: 10px;">
                <strong><%= key %>:</strong>
                <% if (typeof value === 'object') { %>
                  <div style="margin-left: 10px;">
                    <% displayDetails(value); %>
                  </div>
                <% } else { %>
                  <%= value %>
                <% } %>
              </div>
            <% }); %>
          <% } else { %>
            <p>No details available.</p>
          <% } %>
        <% }; %>
      
      <% displayDetails(product.details); %>
    </div>
  
    <form action="/add-to-cart" method="post" >
      <% if (product.sizes && product.sizes.length > 0){ %>
        <% product.sizes.forEach((size) => { %>
          <label for="size"><%= size  %></label>
          <input type="radio" name="size" id="size" value="<%= size  %>" required>
        <% }) %>
      <% } %>

      <input type="hidden" name="product_id" value="<%= product._id %>">


      <% if (product.stock_quantity > 0) {%>
        <label for="quantity">Quantity:</label>
        <input type="number" name="quantity" value="1" min="1" max="999" required>
        <button class="latest-link-txt add-to-cart-btn" type="submit">Add to Cart</button>
      <% } else { %>
        <p>Trenutno nema dostupnih u skladištu!</p>
      <% } %>

    </form>
</article>
</section>

<section class="comments">
    <% if (user){ %>
      <form id="commentForm" action="/products/<%= product._id %>/comments" method="POST" onsubmit="event.preventDefault(); addComment()">
        <article class="comment">
          <textarea name="comment" id="comment" cols="30" rows="10"></textarea>
        </article>
        <div class="rating">
          <input type="radio" id="star5" name="rating" value="5" /><label for="star5"></label>
          <input type="radio" id="star4" name="rating" value="4" /><label for="star4"></label>
          <input type="radio" id="star3" name="rating" value="3" /><label for="star3"></label>
          <input type="radio" id="star2" name="rating" value="2" /><label for="star2"></label>
          <input type="radio" id="star1" name="rating" value="1" /><label for="star1"></label>
        </div>
        <button type="submit" onclick="validateForm()">Pošalji</button>
      </form>
    <%} else if (!user && review.length > 0) {%>
      <h5>Log in to add comments!</h5>
      <a href="<%=login_url%>">Log in</a>
      <%} %>

    <h1>Product Reviews</h1>

  <div class="container">


    <% if (review.length > 0) { %>
      <%  review.reverse().forEach((comment) => { %>
        <% if (comment.user_id){ %>
          <article id="comment-<%= comment._id %>">
            <h2><%= comment.user_id.first_name %> <%= comment.user_id.last_name %></h2>
            <p>Comment: <%= comment.comment %></p>
            <p>Rating: <span class="rating"><%= comment.rating %></span></p>
            <% if (user) { %>
              <% if (user._id.toString() === comment.user_id._id.toString() || user.role === 'admin') { %>
                <form action="/products/<%= product._id %>/comments/<%= comment._id %>/delete" onsubmit="event.preventDefault(); deleteComment('<%= comment._id %>') " method="POST" >
                  <button type="submit">Izbriši</button>
                </form>
              <% } %>
            <% } %>
          </article>
        <% } %>
      <% }); %>
    <% } else { %>
      <h5 id="message_default" >Be the first one to leave a comment!</h5>
      <% if (!user) { %>
        <a href="<%=login_url%>">Log in</a>
      <% } %>
    <% } %>

  
  </div>

</section>
<%}%>

<script>
  
  function addComment() {
    const form = document.getElementById('commentForm');
    const formData = new FormData(form);

    fetch(form.action, {
      method: 'POST',
      body: formData,
      credentials: 'same-origin' // Include this line if you are using sessions for authentication
    })
    .then(response => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      form.reset();
      return response.json();
    })
    .then(data => {
      // Assuming the response includes the newly added comment data
      // Update the UI to display the newly added comment
      const comment_container = document.querySelector('.comments .container');
      const new_comment_article = document.createElement('article');
      new_comment_article.id = 'comment-' + data._id;
      new_comment_article.innerHTML = `
          <h2>${data.user_id.first_name} ${data.user_id.last_name}</h2>
          <p>Comment: ${data.comment}</p>
          <p>Rating: <span class="rating">${data.rating}</span></p>
          <form action="/products/${data.product_id}/comments/${data._id}/delete" id="delete-${data._id}" onsubmit="event.preventDefault(); deleteComment('${data._id}') " method="POST">
            <button type="submit">Izbriši</button>
          </form>
      `;
      comment_container.prepend(new_comment_article);
      document.getElementById('message_default').remove();
    })  
    .catch(error => {
      console.error('There was an error adding the comment:', error);
    });
}


function deleteComment(comment_id) {
  fetch(`/products/<%= product._id %>/comments/${comment_id}/delete`, {
    method: 'POST',
    credentials: 'same-origin' // Include this line if you are using sessions for authentication
  })
  .then(response => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    // Assuming the response indicates successful deletion
    // Update the UI to remove the deleted comment
    const commentElement = document.getElementById(`comment-${comment_id}`);
    if (commentElement) {
      commentElement.remove();
    }
  })
  .catch(error => {
    console.error('There was an error deleting the comment:', error);
  });
}


  

function validateForm() {
    let ratingInputs = document.getElementsByName('rating');
    let ratingSelected = false;
    
    for (let i = 0; i < ratingInputs.length; i++) {
      if (ratingInputs[i].checked) {
        ratingSelected = true;
        break;
      }
    }

    if (!ratingSelected) {
      alert('Please select a rating.');
      event.preventDefault(); 
    }
  }


</script>


